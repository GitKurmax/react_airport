{"version":3,"sources":["components/BoardHeader.js","components/Head.js","components/TableRow.js","components/TableBody.js","components/BoardTable.js","components/Calendar.js","App.js","serviceWorker.js","index.js"],"names":["BoardHeader","props","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","departure","React","createRef","arrival","changeView","bind","assertThisInitialized","event","target","classList","contains","current","forEach","item","toggle","changeStatus","react_default","a","createElement","className","ref","onClick","assign","width","height","d","fill","fillRule","Component","Head","status","TableRow","state","displayClass","showLink","setState","onMouseEnter","onMouseLeave","terminal","gateClass","gateNo","localTime","destination","src","logo","airline","flight","alert","preventDefault","href","TableBody","loaded","loader","day","nowDate","_this2","month","Date","getMonth","concat","getDate","getFullYear","fetch","then","response","json","body","map","createLists","timeShedule","airport","classForGates","itemTime","getHours","getMinutes","toString","length","itemDeptTime","deptTime","components_TableRow","key","ID","term","trim","en","name","logoSmallName","codeShareData","codeShare","placeLoader","createRequest","prevProps","prevState","console","log","top","elem","document","documentElement","clientHeight","left","clientWidth","style","BoardTable","components_Head","components_TableBody","Calendar","dayActive","changeCalendarStatus","App","data","calendarStatus","components_BoardHeader","components_Calendar","components_BoardTable","Boolean","window","location","hostname","match","ReactDOM","render","src_App_0","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.3a1e55cf.chunk.js","sourcesContent":["import React, { Component } from 'react';\nimport '../css/BoardHeader.css';\n\nclass BoardHeader extends Component {\n  constructor(props) {\n    super(props);\n\n    this.departure = React.createRef();\n    this.arrival = React.createRef();\n    this.changeView = this.changeView.bind(this);\n  }\n\n  changeView(event) {\n    if (event.target.classList.contains('active')) {\n      return;\n    }\n\n    const buttons = [this.departure.current, this.arrival.current];\n    buttons.forEach((item) => {\n      item.classList.toggle('active');\n      item.classList.toggle('unactive');\n    });\n\n    this.props.changeStatus(event);\n  }\n\n  render() {\n    return (\n      <section className=\"header_wrapper_section\">\n        <div\n          ref={this.departure}\n          className={`header_wrapper departure active`}\n          onClick={this.changeView}>\n            <svg width={40} height={28} {...this.props}>\n              <path\n                d=\"M39.855 11.9a2.946 2.946 0 0 0-3.772-1.888l-10.251 3.603L11.339 1.577 7.612 2.872l9.166 13.913-9.592 3.373-4.1-2.837-2.798.988 4.03 6.136 1.704 2.578 3.085-1.089 10.25-3.601 8.399-2.944 10.255-3.606a3.092 3.092 0 0 0 1.844-3.883z\"\n                fill=\"#fff\"\n                fillRule=\"nonzero\"\n              />\n            </svg>\n            <span>Departures</span>\n        </div>\n        <div ref={this.arrival} className =\"header_wrapper arrival unactive\" onClick={this.changeView}><span>\n          <svg width={40} height={28} {...this.props}>\n            <g fill=\"none\" fillRule=\"evenodd\">\n              <path\n                d=\"M37.67 22.643a2.944 2.944 0 0 0-2.199-3.597l-10.597-2.374-5.912-17.875-3.844-.876.404 16.646-9.916-2.22-1.973-4.574-2.896-.645.169 7.335.078 3.088 3.192.71 10.595 2.374 8.678 1.95 10.6 2.373a3.09 3.09 0 0 0 3.62-2.315z\"\n                fill=\"#fff\"\n                fillRule=\"nonzero\"\n              />\n            </g>\n          </svg>\n          </span>\n          <span>Arrivals</span>\n        </div>\n      </section>\n    );\n  }\n}\n\nexport default BoardHeader;","import React from 'react';\r\nimport '../css/Head.css';\r\n\r\nfunction Head (props) {\r\n  return (\r\n    <thead>\r\n      <tr className=\"thead_tr\">\r\n        <th>Terminal</th>\r\n        <th className={props.status}>Gate</th>\r\n        <th>Local time</th>\r\n        <th>Destination</th>\r\n        <th>Status</th>\r\n        <th>Airline</th>\r\n        <th>Flight</th>\r\n      </tr>\r\n    </thead>\r\n  );\r\n}\r\n\r\nexport default Head;","import React from 'react';\nimport '../css/TableRow.css'\n\nclass TableRow extends React.Component {\n  constructor(props) {\n    super(props)\n\n    this.state = {\n      displayClass: 'unvisible'\n    }\n\n    this.showLink = this.showLink.bind(this)\n  }\n\n  showLink(event) {\n    this.setState((state) => {\n      return {\n        displayClass: state.displayClass === 'unvisible' ? 'visible' : 'unvisible'}\n    })\n  }\n\n  render() {\n    return (\n      <tr className=\"row\" onMouseEnter={this.showLink} onMouseLeave={this.showLink}>\n        <td className= 'terminal'>\n          <div className={this.props.terminal === 'A' ? 'green' : 'blue'}>{this.props.terminal}</div>\n        </td>\n        <td className={this.props.gateClass}>{this.props.gateNo}</td>\n        <td>{this.props.localTime}</td>\n        <td>{this.props.destination}</td>\n        <td>{this.props.status}</td>\n        <td>  \n          <span className = \"image\">\n            <img src = {this.props.logo}/>\n          </span>\n          <span>\n            {this.props.airline}\n          </span>\n        </td>\n        <td>{this.props.flight} <a onClick={(event) => {\n          alert('A этого нам не задавали');\n          event.preventDefault();\n        }\n      } className={this.state.displayClass} href=\"#\"> Flight details</a></td>\n      </tr>\n    )\n  }\n}\n\nexport default TableRow;","import React, { Component } from 'react';\nimport TableRow from './TableRow';\n\nclass TableBody extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      arrival: null,\n      departure: null,\n      loaded: false,\n    }\n\n    this.loader = React.createRef();\n  }\n\n  createRequest(day) {\n    let nowDate;\n    const month = new Date().getMonth()+1 < 10 ? `0${new Date().getMonth()+1}` : new Date().getMonth()+1;\n   \n    if (day === 'Today') {\n      nowDate = `${new Date().getDate()}-${month}-${new Date().getFullYear()}`\n    }\n\n    if (day === 'Yestarday') {\n      nowDate = `${new Date().getDate() - 1}-${month}-${new Date().getFullYear()}`\n    }\n\n    if (day === 'Tomorrow') {\n      nowDate = `${new Date().getDate() + 1}-${month}-${new Date().getFullYear()}`\n    }\n\n    fetch(`https://api.iev.aero/api/flights/${nowDate}`).then(response => response.json()).then(response => response).then((response) => {\n      const departure = response.body.departure.map((item) => {\n        return this.createLists(item, 'timeDepShedule', 'airportToID.city_en', 'dep');\n      });\n      const arrival = response.body.arrival.map((item) => {\n        return this.createLists(item, 'timeArrShedule', 'airportFromID.city_en', 'arr');\n      });\n\n      this.setState({\n        arrival: arrival,\n        departure: departure,\n        loaded: true\n      })\n    });\n  }\n\n  createLists(item, timeShedule, airport, classForGates) {\n    const itemTime = new Date(item[timeShedule]);\n    const localTime = `${itemTime.getHours()}:${itemTime.getMinutes().toString().length === 2 ? itemTime.getMinutes() : '0' +  itemTime.getMinutes()}`;\n    const itemDeptTime = new Date(item['timeDepFact']);\n    const deptTime = `${itemDeptTime.getHours()}:${itemDeptTime.getMinutes().toString().length === 2 ? itemDeptTime.getMinutes() : '0' +  itemDeptTime.getMinutes()}`;\n    let status;\n    \n    switch (item.status) {\n      case 'DP': \n        status = 'Departed at ' + deptTime;\n        break;\n      case 'ON': \n        status = 'On time';\n        break;\n      case 'CX': \n        status = 'Canceled';\n        break;\n      case 'CK': \n        status = 'Check-in';\n        break;\n    default:\n        status = item.status;\n    }\n   \n    return (\n      <TableRow\n        key={item.ID}\n        terminal={item.term}\n        localTime={localTime}\n        destination={item[airport].trim()}\n        status={status}\n        airline={item.airline.en.name}\n        logo={item.airline.en.logoSmallName}\n        flight={item.codeShareData[0].codeShare}\n        gateNo={item.gateNo}\n        gateClass = {classForGates}\n      />\n    )\n  }\n\n  componentDidMount() {\n    this.placeLoader(this.loader.current);\n    this.createRequest('Today');\n  }\n\n  componentDidUpdate(prevProps, prevState) {\n    if (this.props.day !== prevProps.day) {\n      console.log(this.state.top);\n      this.setState({\n        loaded: false\n    })\n      if (this.props.day === 'Yestarday') {\n        this.createRequest('Yestarday');\n        \n      }\n\n      if (this.props.day === 'Today') {\n        this.createRequest('Today');\n      }\n\n      if (this.props.day === 'Tomorrow') {\n        this.createRequest('Tomorrow');\n      }\n    }\n  }\n\n  placeLoader(elem) {\n    const loader = elem;\n    const top = document.documentElement.clientHeight/2 - loader.clientHeight/2;\n    const left = document.documentElement.clientWidth/2 - loader.clientWidth/2;\n    this.setState({\n      style: {\n        top: top + 'px',\n        left: left + 'px'\n      }\n    })\n  }\n\n  render() {\n    if (this.state.loaded) {\n      return (\n        <tbody>\n          {this.state[this.props.status]}\n        </tbody>\n      );\n    } else {\n      return (\n        <div>\n          <div className=\"preloader\"></div>\n          <div ref={this.loader} style={this.state.style} className=\"loading\"></div>\n        </div>\n      )\n    }\n  }\n}\n\nexport default TableBody;\n","import React, { Component } from 'react';\r\nimport Head from './Head';\r\nimport TableBody from './TableBody';\r\nimport '../css/BoardTable.css';\r\n\r\nclass BoardTable extends Component {\r\n  constructor(props) {\r\n    super(props)\r\n    \r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <section className=\"table\">\r\n        <table>\r\n          <Head status = {this.props.status}/>\r\n          <TableBody status = {this.props.status} day = {this.props.day} loaded = {this.props.loaded}/>\r\n        </table>\r\n      </section>\r\n    );\r\n  }\r\n}\r\n\r\nexport default BoardTable;\r\n","import React, { Component } from 'react';\nimport '../css/Calendar.css';\n\nclass Calendar extends Component {\n  constructor(props) {\n    super(props)\n  }\n\n  render() {\n    return (\n      <section className='calendar'>\n        <table>\n          <tbody>\n            <tr>\n              {['Yestarday', 'Today', 'Tomorrow'].map((item) => <td key={item} className={this.props.dayActive === item ? 'active' : ''}\n              onClick={() => this.props.changeCalendarStatus(item)}>{item}</td>)}\n            </tr>\n          </tbody>\n        </table>\n      </section>\n    );\n  }\n}\n\nexport default Calendar;\n","import React from 'react';\nimport BoardHeader from './components/BoardHeader';\nimport BoardTable from './components/BoardTable';\nimport Calendar from './components/Calendar';\nimport './App.css';\n\nclass App extends React.Component {\n  constructor(props) {\n    super(props)\n    this.state = {\n      data: null,\n      status: 'departure',\n      calendarStatus: 'Today',\n      loaded: true\n    }\n\n    this.changeStatus = this.changeStatus.bind(this);\n    this.changeCalendarStatus = this.changeCalendarStatus.bind(this);\n  }\n\n  changeStatus(event) {\n    this.setState((state) => {\n      return {\n        status: state.status === 'arrival' ? 'departure' : 'arrival'\n      }\n    });\n  }\n\n  changeCalendarStatus(status) {\n    this.setState({\n      calendarStatus: status,\n      loaded: false\n    });\n  }\n\n  render() {\n    return (\n      <section className=\"main_wrapper\">\n        <BoardHeader changeStatus = {this.changeStatus}/>\n        <Calendar dayActive = {this.state.calendarStatus} changeCalendarStatus = {this.changeCalendarStatus}/>\n        <BoardTable  status = {this.state.status} day={this.state.calendarStatus} loaded={this.state.loaded}/>\n      </section>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost'\r\n    // [::1] is the IPv6 localhost address.\r\n    || window.location.hostname === '[::1]'\r\n    // 127.0.0.1/8 is considered localhost for IPv4.\r\n    || window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets;\r\n      // see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost.\r\n        // Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service '\r\n              + 'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then((registration) => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all '\r\n                  + 'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch((error) => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl)\r\n    .then((response) => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404\r\n        || (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then((registration) => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready.then((registration) => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport * as serviceWorker from './serviceWorker';\r\n\r\nReactDOM.render(<App />, document.getElementById('root'));\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}